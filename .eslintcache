[{"/home/muhammad/Desktop/WYRA/src/index.js":"1","/home/muhammad/Desktop/WYRA/src/Components/App.js":"2","/home/muhammad/Desktop/WYRA/src/middleware/index.js":"3","/home/muhammad/Desktop/WYRA/src/reducers/index.js":"4","/home/muhammad/Desktop/WYRA/src/Components/Navbar.js":"5","/home/muhammad/Desktop/WYRA/src/Components/Login.js":"6","/home/muhammad/Desktop/WYRA/src/Components/Homepage.js":"7","/home/muhammad/Desktop/WYRA/src/actions/index.js":"8","/home/muhammad/Desktop/WYRA/src/middleware/logger.js":"9","/home/muhammad/Desktop/WYRA/src/reducers/authedUser.js":"10","/home/muhammad/Desktop/WYRA/src/reducers/users.js":"11","/home/muhammad/Desktop/WYRA/src/reducers/questions.js":"12","/home/muhammad/Desktop/WYRA/src/actions/authedUser.js":"13","/home/muhammad/Desktop/WYRA/src/actions/questions.js":"14","/home/muhammad/Desktop/WYRA/src/actions/users.js":"15","/home/muhammad/Desktop/WYRA/src/utils/api.js":"16","/home/muhammad/Desktop/WYRA/src/utils/_DATA.js":"17","/home/muhammad/Desktop/WYRA/src/Components/Leader_Board.js":"18","/home/muhammad/Desktop/WYRA/src/Components/New_Question.js":"19","/home/muhammad/Desktop/WYRA/src/Components/DashBoard.js":"20","/home/muhammad/Desktop/WYRA/src/Components/Question.js":"21"},{"size":422,"mtime":1618280035677,"results":"22","hashOfConfig":"23"},{"size":1267,"mtime":1628462584133,"results":"24","hashOfConfig":"23"},{"size":169,"mtime":1608264272000,"results":"25","hashOfConfig":"23"},{"size":226,"mtime":1608260078000,"results":"26","hashOfConfig":"23"},{"size":3443,"mtime":1628461672445,"results":"27","hashOfConfig":"23"},{"size":4222,"mtime":1628462557361,"results":"28","hashOfConfig":"23"},{"size":3340,"mtime":1629049437987,"results":"29","hashOfConfig":"23"},{"size":379,"mtime":1616853751483,"results":"30","hashOfConfig":"23"},{"size":301,"mtime":1608264274000,"results":"31","hashOfConfig":"23"},{"size":312,"mtime":1618279568129,"results":"32","hashOfConfig":"23"},{"size":211,"mtime":1608174058000,"results":"33","hashOfConfig":"23"},{"size":283,"mtime":1608175072000,"results":"34","hashOfConfig":"23"},{"size":306,"mtime":1618279648593,"results":"35","hashOfConfig":"23"},{"size":166,"mtime":1608104200000,"results":"36","hashOfConfig":"23"},{"size":143,"mtime":1608104372000,"results":"37","hashOfConfig":"23"},{"size":484,"mtime":1608441020000,"results":"38","hashOfConfig":"23"},{"size":4694,"mtime":1617250174426,"results":"39","hashOfConfig":"23"},{"size":2537,"mtime":1628990016071,"results":"40","hashOfConfig":"23"},{"size":3152,"mtime":1629035811936,"results":"41","hashOfConfig":"23"},{"size":2116,"mtime":1628730117666,"results":"42","hashOfConfig":"23"},{"size":3630,"mtime":1629085935197,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"o8cgqy",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/muhammad/Desktop/WYRA/src/index.js",[],["93","94"],"/home/muhammad/Desktop/WYRA/src/Components/App.js",[],"/home/muhammad/Desktop/WYRA/src/middleware/index.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/index.js",[],"/home/muhammad/Desktop/WYRA/src/Components/Navbar.js",["95","96"],"import React, {Fragment, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { colors } from '@material-ui/core';\r\nimport { resetAuthedUser } from '../actions/authedUser';\r\nimport { Link } from \"react-router-dom\";\r\nimport DashBoard from \"./DashBoard\";\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: colors.green.A700\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: theme.spacing(3)\r\n  },\r\n  outerDiv: {\r\n    fontWeight: 'bolder',\r\n    display: \"flex\",\r\n    flexFlow: \"row\",\r\n    justifyContent: \"space-between\",\r\n    borderBottom: '2px solid black',\r\n    paddingBottom: \"0px\",\r\n  },\r\n  innerDiv:{\r\n    display: \"flex\",\r\n    flexFlow: \"row\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  tabSpacing: {\r\n    marginLeft: theme.spacing(15),\r\n    marginBottom: \"0px\",\r\n  },\r\n  spacing: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  capitals: {\r\n    textTransform: \"none\",\r\n  }\r\n});\r\n\r\n\r\nfunction Navbar(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const {users, dispatch} = props;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleLogout = () => {\r\n\t\tdispatch(resetAuthedUser());\r\n  };\r\n\r\nreturn (\r\n  <Fragment>\r\n      <div className={`${classes.root} ${classes.outerDiv}`}>\r\n          <Tabs\r\n            value={value}\r\n            onChange={handleChange}\r\n            indicatorColor=\"secondary\"\r\n            textColor=\"primary\"\r\n            variant=\"standard\"\r\n            className={classes.tabSpacing}\r\n          >\r\n            <Tab label=\"Home\" className={classes.capitals}/>\r\n            <Tab label=\"New Poll\" className={classes.capitals}/>\r\n            <Tab label=\"Leader Board\" className={classes.capitals}/>\r\n          </Tabs>\r\n\r\n        <div className={classes.innerDiv}>\r\n          <ThemeProvider theme={theme} >\r\n            <Typography className={classes.spacing}>{`Hi ${users.name}`}</Typography>\r\n            <Badge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n                }}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n              className={classes.spacing}>\r\n            <Avatar src={users.avatarURL} alt={`Avatar of ${users.name}`}/>\r\n            </Badge>\r\n          </ThemeProvider>\r\n          <Button \r\n            variant=\"contained\" \r\n            onClick={handleLogout} \r\n            size=\"medium\" \r\n            endIcon={<ExitToAppIcon/>}\r\n            className={`${classes.spacing} ${classes.capitals}`}\r\n          >\r\n            Sign out\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    <DashBoard value={value}/>\r\n  </Fragment>\r\n  );\r\n}\r\nfunction mapStateToProps({users, authedUser}) {\r\n  return {\r\n    users: users[authedUser]\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","/home/muhammad/Desktop/WYRA/src/Components/Login.js",["97","98"],"import React, {Fragment, useState} from 'react';\nimport { createTheme, adaptV4Theme, ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport './../App.css';\nimport {connect} from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {AppBar, Typography, Card} from '@material-ui/core';\nimport { setAuthedUser } from '../actions/authedUser';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport { colors } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: colors.green.A700\n    },\n  },\n});\n\n// const theme = createTheme(\n//   adaptV4Theme({\n//     overrides: {\n//     spacing: [1, 2, 3, 4, 5, 6, 7, 8]\n//     }\n//   }), {\n//   palette: {\n//     primary: {\n//       main: colors.green.A700\n//     },\n//   },\n// });\n\n\nconst useStyles = makeStyles((theme) =>({\n  root: {\n    minWidth: 275,\n    padding: \"0em\",\n    margin: \"2em\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  appBar: {\n    backgroundColor: \"lightslategray\",\n    alignItems: \"center\",\n    color: \"red\",\n    margin: 0\n  },\n  buttonSize:{\n    textTransform: \"none\",\n    fontWeight: \"bold\", \n    fontSize: \"2em\",\n  },\n  formSize:{\n    padding: \"8em 8px 8px 8px\",\n    margin:\"8em 8px 8px 8px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexFlow: \"column\"\n  },\n  avatar:{\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexFlow: \"row\",\n    margin: \"2em\",\n  },\n  badge:{\n    animation: \"$ripple 1.2s infinite ease-in-out\",\n    backgroundColor: \"lawngreen\"\n  }\n}));\n\n function Login(props) {\n\n  const classes = useStyles();\n  const [userID, setUserID] = useState(\"\");\n  const [error, setError] = useState(\"\")\n\n  const {users, dispatch} = props;\n\n  const handleInput = (event) => {\n    setUserID(event.target.value)\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    userID !== \"\"\n    ?dispatch(setAuthedUser(userID))\n    :setError(\"Select a user to Login!\")\n  }\n  return (\n    <Fragment>\n      <Grid container spacing={3} justifyContent=\"center\">\n        <Grid item xs={8} >\n        <Card className={classes.root}>\n          <AppBar className={classes.appBar} position=\"static\">\n              <Typography variant=\"h5\">\n                Play the Would You Rather Game\n              </Typography>\n              <Typography variant=\"h5\">\n                Sign Up to Start!\n              </Typography>\n          </AppBar>\n          <Fragment>\n            {Object.keys(users).map(id => (\n              <ThemeProvider theme={theme}>\n              <Badge\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                  }}\n                color=\"primary\"\n                variant=\"dot\">\n              <Avatar src={users[id].avatarURL} key={id} alt={`Avatar of ${users[id].name}`}/>\n              </Badge>\n              </ThemeProvider>\n            ))}\n          </Fragment>\n\n          <form className={classes.formSize} autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Button size=\"large\" className={classes.buttonSize} color=\"success\" type=\"submit\" variant=\"contained\">\n            Sign In\n          </Button>\n          <TextField \n            select \n            value={userID}\n            onChange={handleInput} \n            label=\"Choose a User\" \n            helperText=\"Sign in to one of these users\" \n            variant=\"filled\"\n            fullWidth\n          >\n            {Object.keys(users).map(id => (\n              <MenuItem key={id} value={id}>{users[id].name}</MenuItem>\n            ))}\n          </TextField>\n          {error? (\n          <div>{error}</div>\n          ): \"\"}\n          </form>\n        </Card>\n        </Grid>\n      </Grid>\n  </Fragment>\n  );\n}\n\nfunction mapStateToProps({users}) {\n  return {\n    users\n  }\n}\n\nexport default connect(mapStateToProps)(Login);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/muhammad/Desktop/WYRA/src/Components/Homepage.js",["99"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport {useTheme } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Question from './Question';\nimport {Paper, Typography} from '@material-ui/core';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`full-width-tabpanel-${index}`}\n      aria-labelledby={`full-width-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `full-width-tab-${index}`,\n    'aria-controls': `full-width-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // backgroundColor: theme.palette.background.paper,\n    backgroundColor: \"lghtgreen\",\n    minWidth: 550,\n  },\n  background: {\n    backgroundColor: \"lightgray !important\"\n  },\n  capitals: {\n    textTransform: \"none !important\",\n  },\n  dividerOne: {\n    width: 3,\n    background: \"grey\",\n  },\n}));\n\nexport default function Homepage(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [value, setValue] = React.useState(0);\n  const [toggle, setToggle] = React.useState(false)\n\n  const {answeredIds, unansweredIds,} = props;\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n  const handleClicking = () => {\n    toggle === false\n    ?setToggle(true)\n    :setToggle(false)\n  };\n\n  return (\n    <Paper elevation={12} className={classes.root}>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"full width tabs example\">\n          <Tab \n            label=\"Unanswered\" {...a11yProps(0)}\n            className = {`${classes.capitals} ${toggle === true? \"\": classes.background}`}\n            onClick={handleClicking}/>\n          <Tab label=\"Answered\" {...a11yProps(1)}\n            className = {`${classes.capitals} ${toggle === true? classes.background:\"\"} `}\n            onClick={handleClicking}/>\n        </Tabs>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction}>\n          {unansweredIds.map(unanswered => \n            <Box key={unansweredIds}>\n              <Question ids={unanswered}/>\n            </Box>\n          )}\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n          {answeredIds.map(answered => \n            <Box key={answeredIds}>\n              <Question ids={answered}/>\n            </Box>\n          )}\n        </TabPanel>\n      </SwipeableViews>\n    </Paper>\n  );\n}\n","/home/muhammad/Desktop/WYRA/src/actions/index.js",[],"/home/muhammad/Desktop/WYRA/src/middleware/logger.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/authedUser.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/users.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/questions.js",[],"/home/muhammad/Desktop/WYRA/src/actions/authedUser.js",[],"/home/muhammad/Desktop/WYRA/src/actions/questions.js",[],"/home/muhammad/Desktop/WYRA/src/actions/users.js",[],"/home/muhammad/Desktop/WYRA/src/utils/api.js",[],"/home/muhammad/Desktop/WYRA/src/utils/_DATA.js",[],"/home/muhammad/Desktop/WYRA/src/Components/Leader_Board.js",["100","101"],"import React, {Fragment, useState} from 'react';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport TryIcon from '@material-ui/icons/Try';\nimport {AppBar, Typography} from '@material-ui/core';\nimport { grey, } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    '& > :not(style)': {\n      m: 10,\n      width: 628,\n      height: 128,\n    },\n  },\n  outerPaper: {\n    display: 'flex',\n    flexDirection: \"column\",\n    margin: \"2em\",\n  },\n  content: {\n    display: 'flex',\n    flexDirection: \"row\",\n    margin: \"0em 2em 0em 2em\",\n  },\n  middle: {\n    display: 'flex',\n    flexDirection: \"row\",\n    position: \"relative\",\n    left: 150,\n  },\n  innerContent: {\n    margin: \"0em 1em\",\n    width: 100,\n  },\n  innerPaper: {\n    position: 'relative',\n    left: 270,\n  },\n  appBar: {\n    borderBottom: \"2px solid gray\",\n    marginBottom: \"1em\"\n  },\n  dividerOne: {\n    width: 1,\n    background: \"grey\",\n  },\n  dividerTwo: {\n    height: 1,\n    background: \"grey\",\n  },\n})\nconst theme = createTheme({\n  // palette: {\n  //   primary: grey,\n  // },\n  palette: {\n    primary: {\n      main: grey[300],\n    }\n  },\n});\n\nexport default function LeaderBoard() {\n\n  const classes = useStyles();\n\n  return (\n    <Box className={`${classes.root}`}>\n      <Paper className={`${classes.outerPaper}`} outlined elevation={12}>\n        <TryIcon/>\n        <div className={`${classes.content}`}>\n          <div>Left</div>\n          <div className={`${classes.middle}`}>\n            <Divider orientation=\"vertical\" className={`${classes.dividerOne}`}/>\n            <div className={`${classes.innerContent}`}>\n              <div>Top</div>\n              <Divider orientation=\"horizontal\" className={`${classes.dividerTwo}`}/> \n              <div>Bottom</div>\n            </div>\n            <Divider orientation=\"vertical\" className={`${classes.dividerOne}`}/> \n          </div>\n          <Paper className={`${classes.innerPaper}`} elevation={6}>\n            <ThemeProvider theme={theme}>\n              <AppBar className={`${classes.appBar}`} position=\"static\">\n                <Typography variant=\"h6\">\n                  Score\n                </Typography>\n              </AppBar>\n            </ThemeProvider>\n            <div>Score Number</div>\n          </Paper>\n        </div>\n      </Paper>\n    </Box>\n  );\n}\n","/home/muhammad/Desktop/WYRA/src/Components/New_Question.js",["102","103","104"],"import React, {Fragment, useState} from 'react';\nimport {createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport {AppBar, Paper, Typography} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexFlow: \"column\",\n    width: \"30em\",\n  },\n  appBar: {\n    padding: \"0.5em\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  spacing: {\n    margin: \"0.5em 1em 1em 1em\", \n  },\n  font: {\n    fontWeight: 700,\n  },\n  button: {\n    margin: \"2em 0em\",\n  },\n  background: {\n    backgroundColor: \"black\",\n    // margin: theme.spacing(1),\n    margin: \"2em\",\n  },\n  subtitle: {\n    display: \"flex\", \n    flexDirection: \"column\", \n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nexport default function NewPoll() {\n  \n  const classes = useStyles();\n  const [isActive, setIsActive] = React.useState(false);\n\n  const handleClicking = () => {\n    isActive === false\n    ?setIsActive(true)\n    :setIsActive(false)\n  };\n\n  return (\n    <Paper elevation={12}>\n      <ThemeProvider theme={theme}>\n        <form  autoComplete=\"off\" onSubmit={\"\"} className={`${classes.root}`}>\n          <AppBar className={`${classes.appBar}`} position=\"static\">\n            <Typography variant=\"h5\">\n              Play the Would You Rather Game.\n            </Typography>\n          </AppBar>\n          <Box className={`${classes.spacing}`}>\n            <div className={`${classes.spacing} ${classes.subtitle}`}>\n              <Typography variant=\"h7\" gutterBottom\t>\n                Enter your question:\n              </Typography>\n              <Typography variant=\"h7\" sx={{ marginTop: \"0.5em\" }} className={`${classes.font}`}>\n                Would you rather:\n              </Typography>\n            </div>\n            <div className={`${classes.spacing}`}>\n              <TextField \n                value={\"\"}\n                onChange={\"\"} \n                label=\"Enter a first option\" \n                variant=\"outlined\"\n                fullWidth\n              />\n            </div>\n            <div className={`${classes.spacing}`}>\n              <Divider>\n                <Chip label=\"OR\" variant=\"h1\"/>\n              </Divider>\n            </div>\n            <div className={`${classes.spacing}`}>\n              <TextField \n                value={\"\"}\n                onChange={\"\"} \n                label=\"Enter a second option\" \n                variant=\"outlined\"\n                fullWidth\n              />\n            </div>\n            <div className={`${classes.spacing}`}>\n              <Button size=\"large\" fullWidth className={`${classes.button}`} color=\"primary\" type=\"submit\" variant=\"contained\">\n                Submit\n              </Button>\n            </div>\n          </Box>\n        </form>\n      </ThemeProvider>\n    </Paper>\n  );\n}","/home/muhammad/Desktop/WYRA/src/Components/DashBoard.js",["105"],"import React, {Fragment, useState} from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport Box from '@material-ui/core/Box';\nimport { Paper } from '@material-ui/core';\nimport Homepage from \"./Homepage\";\nimport LeaderBoard from \"./Leader_Board\";\nimport NewPoll from \"./New_Question\";\nimport {connect} from \"react-redux\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: \"center\",\n  },\n}));\n\nfunction TabPanel(props) {\n\n  const classes = useStyles();\n\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n      className={classes.root}\n    >\n      {value === index && (\n        <Box p={1} >\n          <Paper elevation={0}>{children}</Paper>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\nfunction DashBoard(props) {\n\n  const { value, answeredIds, unansweredIds } = props;\n\n  return (\n    <Fragment>\n      <TabPanel value={value} index={0}>\n        <Homepage answeredIds={answeredIds} unansweredIds={unansweredIds}/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <NewPoll/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n        <LeaderBoard/>\n      </TabPanel>\n    </Fragment>\n  );\n}\n\nfunction mapStateToProps({authedUser, questions, users}) {\n  const getAnsweredId = Object.keys(users[authedUser].answers);\n\n  const answeredIds = Object.keys(questions).filter(question => \n    getAnsweredId.hasOwnProperty(question)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n     \n  const unansweredIds = Object.keys(questions).filter(question => \n    !getAnsweredId.hasOwnProperty(question)).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  return {\n    answeredIds,\n    unansweredIds\n  }\n}\n\nexport default connect(mapStateToProps)(DashBoard);","/home/muhammad/Desktop/WYRA/src/Components/Question.js",["106","107","108","109","110","111","112","113","114","115"],{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":13},{"ruleId":"120","severity":1,"message":"124","line":15,"column":10,"nodeType":"122","messageId":"123","endLine":15,"endColumn":14},{"ruleId":"120","severity":1,"message":"125","line":2,"column":23,"nodeType":"122","messageId":"123","endLine":2,"endColumn":35},{"ruleId":"120","severity":1,"message":"124","line":15,"column":10,"nodeType":"122","messageId":"123","endLine":15,"endColumn":14},{"ruleId":"120","severity":1,"message":"126","line":9,"column":8,"nodeType":"122","messageId":"123","endLine":9,"endColumn":15},{"ruleId":"120","severity":1,"message":"127","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"128","line":1,"column":26,"nodeType":"122","messageId":"123","endLine":1,"endColumn":34},{"ruleId":"120","severity":1,"message":"127","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"128","line":1,"column":26,"nodeType":"122","messageId":"123","endLine":1,"endColumn":34},{"ruleId":"120","severity":1,"message":"129","line":54,"column":9,"nodeType":"122","messageId":"123","endLine":54,"endColumn":23},{"ruleId":"120","severity":1,"message":"128","line":1,"column":26,"nodeType":"122","messageId":"123","endLine":1,"endColumn":34},{"ruleId":"120","severity":1,"message":"128","line":1,"column":16,"nodeType":"122","messageId":"123","endLine":1,"endColumn":24},{"ruleId":"120","severity":1,"message":"130","line":5,"column":22,"nodeType":"122","messageId":"123","endLine":5,"endColumn":35},{"ruleId":"120","severity":1,"message":"131","line":6,"column":9,"nodeType":"122","messageId":"123","endLine":6,"endColumn":15},{"ruleId":"120","severity":1,"message":"132","line":6,"column":25,"nodeType":"122","messageId":"123","endLine":6,"endColumn":32},{"ruleId":"120","severity":1,"message":"133","line":8,"column":10,"nodeType":"122","messageId":"123","endLine":8,"endColumn":16},{"ruleId":"120","severity":1,"message":"134","line":10,"column":10,"nodeType":"122","messageId":"123","endLine":10,"endColumn":13},{"ruleId":"120","severity":1,"message":"126","line":11,"column":8,"nodeType":"122","messageId":"123","endLine":11,"endColumn":15},{"ruleId":"120","severity":1,"message":"124","line":12,"column":10,"nodeType":"122","messageId":"123","endLine":12,"endColumn":14},{"ruleId":"120","severity":1,"message":"135","line":83,"column":7,"nodeType":"122","messageId":"123","endLine":83,"endColumn":12},{"ruleId":"120","severity":1,"message":"136","line":98,"column":10,"nodeType":"122","messageId":"123","endLine":98,"endColumn":13},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'adaptV4Theme' is defined but never used.","'Divider' is defined but never used.","'Fragment' is defined but never used.","'useState' is defined but never used.","'handleClicking' is assigned a value but never used.","'ThemeProvider' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'colors' is defined but never used.","'red' is defined but never used.","'theme' is assigned a value but never used.","'ids' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]