[{"/home/muhammad/Desktop/WYRA/src/index.js":"1","/home/muhammad/Desktop/WYRA/src/Components/App.js":"2","/home/muhammad/Desktop/WYRA/src/middleware/index.js":"3","/home/muhammad/Desktop/WYRA/src/reducers/index.js":"4","/home/muhammad/Desktop/WYRA/src/Components/Navbar.js":"5","/home/muhammad/Desktop/WYRA/src/Components/Login.js":"6","/home/muhammad/Desktop/WYRA/src/actions/index.js":"7","/home/muhammad/Desktop/WYRA/src/middleware/logger.js":"8","/home/muhammad/Desktop/WYRA/src/reducers/authedUser.js":"9","/home/muhammad/Desktop/WYRA/src/reducers/users.js":"10","/home/muhammad/Desktop/WYRA/src/reducers/questions.js":"11","/home/muhammad/Desktop/WYRA/src/actions/authedUser.js":"12","/home/muhammad/Desktop/WYRA/src/actions/questions.js":"13","/home/muhammad/Desktop/WYRA/src/actions/users.js":"14","/home/muhammad/Desktop/WYRA/src/utils/api.js":"15","/home/muhammad/Desktop/WYRA/src/utils/_DATA.js":"16","/home/muhammad/Desktop/WYRA/src/Components/Leader_Board.js":"17","/home/muhammad/Desktop/WYRA/src/Components/New_Question.js":"18","/home/muhammad/Desktop/WYRA/src/Components/DashBoard.js":"19","/home/muhammad/Desktop/WYRA/src/Components/Question.js":"20","/home/muhammad/Desktop/WYRA/src/Components/AnswerPage.js":"21"},{"size":422,"mtime":1618280035677,"results":"22","hashOfConfig":"23"},{"size":1704,"mtime":1629431368904,"results":"24","hashOfConfig":"23"},{"size":169,"mtime":1608264272000,"results":"25","hashOfConfig":"23"},{"size":226,"mtime":1608260078000,"results":"26","hashOfConfig":"23"},{"size":3627,"mtime":1629431666778,"results":"27","hashOfConfig":"23"},{"size":4222,"mtime":1628462557361,"results":"28","hashOfConfig":"23"},{"size":395,"mtime":1630149355916,"results":"29","hashOfConfig":"23"},{"size":301,"mtime":1608264274000,"results":"30","hashOfConfig":"23"},{"size":312,"mtime":1618279568129,"results":"31","hashOfConfig":"23"},{"size":934,"mtime":1630149398812,"results":"32","hashOfConfig":"23"},{"size":830,"mtime":1630149394176,"results":"33","hashOfConfig":"23"},{"size":306,"mtime":1618279648593,"results":"34","hashOfConfig":"23"},{"size":1286,"mtime":1630149347060,"results":"35","hashOfConfig":"23"},{"size":158,"mtime":1630147943372,"results":"36","hashOfConfig":"23"},{"size":484,"mtime":1608441020000,"results":"37","hashOfConfig":"23"},{"size":4693,"mtime":1629863768832,"results":"38","hashOfConfig":"23"},{"size":2729,"mtime":1629343465639,"results":"39","hashOfConfig":"23"},{"size":4197,"mtime":1630149431948,"results":"40","hashOfConfig":"23"},{"size":4179,"mtime":1630151599100,"results":"41","hashOfConfig":"23"},{"size":3607,"mtime":1630148885632,"results":"42","hashOfConfig":"23"},{"size":7641,"mtime":1630149437672,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"o8cgqy",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/muhammad/Desktop/WYRA/src/index.js",[],["91","92"],"/home/muhammad/Desktop/WYRA/src/Components/App.js",[],"/home/muhammad/Desktop/WYRA/src/middleware/index.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/index.js",[],"/home/muhammad/Desktop/WYRA/src/Components/Navbar.js",["93","94","95","96","97","98","99","100"],"import React, {Fragment, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { colors } from '@material-ui/core';\r\nimport { resetAuthedUser } from '../actions/authedUser';\r\nimport { Link } from \"react-router-dom\";\r\nimport Dashboard from \"./DashBoard\";\r\nimport AnswerPage from \"./AnswerPage\";\r\nimport LeaderBoard from \"./Leader_Board\";\r\nimport NewQuestion from \"./New_Question\";\r\nimport {Route, Switch, BrowserRouter as  Router} from \"react-router-dom\";\r\n\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: colors.green.A700\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: theme.spacing(3)\r\n  },\r\n  outerDiv: {\r\n    fontWeight: 'bolder',\r\n    display: \"flex\",\r\n    flexFlow: \"row\",\r\n    justifyContent: \"space-between\",\r\n    borderBottom: '2px solid black',\r\n    paddingBottom: \"0px\",\r\n  },\r\n  innerDiv:{\r\n    display: \"flex\",\r\n    flexFlow: \"row\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  tabSpacing: {\r\n    marginLeft: theme.spacing(15),\r\n    marginBottom: \"0px\",\r\n  },\r\n  spacing: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  capitals: {\r\n    textTransform: \"none\",\r\n  }\r\n});\r\n\r\n\r\nfunction Navbar(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const {users, dispatch} = props;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleLogout = () => {\r\n\t\tdispatch(resetAuthedUser());\r\n  };\r\n\r\nreturn (\r\n  <Fragment>\r\n    <div className={`${classes.root} ${classes.outerDiv}`}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"primary\"\r\n          variant=\"standard\"\r\n          className={classes.tabSpacing}\r\n        >\r\n          <Tab label=\"Home\" component={Link} to=\"/\" className={classes.capitals}/>\r\n          <Tab label=\"New Poll\" component={Link} to=\"/new_question\" className={classes.capitals}/>\r\n          <Tab label=\"Leader Board\" component={Link} to=\"/leaderboard\" className={classes.capitals}/>\r\n        </Tabs>\r\n      <div className={classes.innerDiv}>\r\n        <ThemeProvider theme={theme} >\r\n          <Typography className={classes.spacing}>{`Hi ${users.name}`}</Typography>\r\n          <Badge\r\n            overlap=\"circular\"\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n              }}\r\n            color=\"primary\"\r\n            variant=\"dot\"\r\n            className={classes.spacing}>\r\n          <Avatar src={users.avatarURL} alt={`Avatar of ${users.name}`}/>\r\n          </Badge>\r\n        </ThemeProvider>\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={handleLogout} \r\n          size=\"medium\" \r\n          endIcon={<ExitToAppIcon/>}\r\n          className={`${classes.spacing} ${classes.capitals}`}\r\n        >\r\n          Sign out\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n  );\r\n}\r\nfunction mapStateToProps({users, authedUser}) {\r\n  return {\r\n    users: users[authedUser]\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","/home/muhammad/Desktop/WYRA/src/Components/Login.js",["101","102"],"import React, {Fragment, useState} from 'react';\nimport { createTheme, adaptV4Theme, ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport './../App.css';\nimport {connect} from \"react-redux\";\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {AppBar, Typography, Card} from '@material-ui/core';\nimport { setAuthedUser } from '../actions/authedUser';\nimport Avatar from '@material-ui/core/Avatar';\nimport Badge from '@material-ui/core/Badge';\nimport { colors } from '@material-ui/core';\nimport { Link } from \"react-router-dom\";\n\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: colors.green.A700\n    },\n  },\n});\n\n// const theme = createTheme(\n//   adaptV4Theme({\n//     overrides: {\n//     spacing: [1, 2, 3, 4, 5, 6, 7, 8]\n//     }\n//   }), {\n//   palette: {\n//     primary: {\n//       main: colors.green.A700\n//     },\n//   },\n// });\n\n\nconst useStyles = makeStyles((theme) =>({\n  root: {\n    minWidth: 275,\n    padding: \"0em\",\n    margin: \"2em\",\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  appBar: {\n    backgroundColor: \"lightslategray\",\n    alignItems: \"center\",\n    color: \"red\",\n    margin: 0\n  },\n  buttonSize:{\n    textTransform: \"none\",\n    fontWeight: \"bold\", \n    fontSize: \"2em\",\n  },\n  formSize:{\n    padding: \"8em 8px 8px 8px\",\n    margin:\"8em 8px 8px 8px\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexFlow: \"column\"\n  },\n  avatar:{\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexFlow: \"row\",\n    margin: \"2em\",\n  },\n  badge:{\n    animation: \"$ripple 1.2s infinite ease-in-out\",\n    backgroundColor: \"lawngreen\"\n  }\n}));\n\n function Login(props) {\n\n  const classes = useStyles();\n  const [userID, setUserID] = useState(\"\");\n  const [error, setError] = useState(\"\")\n\n  const {users, dispatch} = props;\n\n  const handleInput = (event) => {\n    setUserID(event.target.value)\n  }\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    userID !== \"\"\n    ?dispatch(setAuthedUser(userID))\n    :setError(\"Select a user to Login!\")\n  }\n  return (\n    <Fragment>\n      <Grid container spacing={3} justifyContent=\"center\">\n        <Grid item xs={8} >\n        <Card className={classes.root}>\n          <AppBar className={classes.appBar} position=\"static\">\n              <Typography variant=\"h5\">\n                Play the Would You Rather Game\n              </Typography>\n              <Typography variant=\"h5\">\n                Sign Up to Start!\n              </Typography>\n          </AppBar>\n          <Fragment>\n            {Object.keys(users).map(id => (\n              <ThemeProvider theme={theme}>\n              <Badge\n                overlap=\"circular\"\n                anchorOrigin={{\n                  vertical: 'bottom',\n                  horizontal: 'right',\n                  }}\n                color=\"primary\"\n                variant=\"dot\">\n              <Avatar src={users[id].avatarURL} key={id} alt={`Avatar of ${users[id].name}`}/>\n              </Badge>\n              </ThemeProvider>\n            ))}\n          </Fragment>\n\n          <form className={classes.formSize} autoComplete=\"off\" onSubmit={handleSubmit}>\n          <Button size=\"large\" className={classes.buttonSize} color=\"success\" type=\"submit\" variant=\"contained\">\n            Sign In\n          </Button>\n          <TextField \n            select \n            value={userID}\n            onChange={handleInput} \n            label=\"Choose a User\" \n            helperText=\"Sign in to one of these users\" \n            variant=\"filled\"\n            fullWidth\n          >\n            {Object.keys(users).map(id => (\n              <MenuItem key={id} value={id}>{users[id].name}</MenuItem>\n            ))}\n          </TextField>\n          {error? (\n          <div>{error}</div>\n          ): \"\"}\n          </form>\n        </Card>\n        </Grid>\n      </Grid>\n  </Fragment>\n  );\n}\n\nfunction mapStateToProps({users}) {\n  return {\n    users\n  }\n}\n\nexport default connect(mapStateToProps)(Login);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/muhammad/Desktop/WYRA/src/actions/index.js",[],"/home/muhammad/Desktop/WYRA/src/middleware/logger.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/authedUser.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/users.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/questions.js",[],"/home/muhammad/Desktop/WYRA/src/actions/authedUser.js",[],"/home/muhammad/Desktop/WYRA/src/actions/questions.js",[],"/home/muhammad/Desktop/WYRA/src/actions/users.js",[],"/home/muhammad/Desktop/WYRA/src/utils/api.js",[],"/home/muhammad/Desktop/WYRA/src/utils/_DATA.js",[],"/home/muhammad/Desktop/WYRA/src/Components/Leader_Board.js",["103","104"],"import React, {Fragment, useState} from 'react';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport TryIcon from '@material-ui/icons/Try';\nimport {AppBar, Typography} from '@material-ui/core';\nimport { grey, } from '@material-ui/core/colors';\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    '& > :not(style)': {\n      m: 10,\n      width: 628,\n      height: 128,\n    },\n  },\n  center: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: \"center\",\n  },\n  outerPaper: {\n    display: 'flex',\n    flexDirection: \"column\",\n    margin: \"2em\",\n  },\n  content: {\n    display: 'flex',\n    flexDirection: \"row\",\n    margin: \"0em 2em 0em 2em\",\n  },\n  middle: {\n    display: 'flex',\n    flexDirection: \"row\",\n    position: \"relative\",\n    left: 150,\n  },\n  innerContent: {\n    margin: \"0em 1em\",\n    width: 100,\n  },\n  innerPaper: {\n    position: 'relative',\n    left: 270,\n  },\n  appBar: {\n    borderBottom: \"2px solid gray\",\n    marginBottom: \"1em\"\n  },\n  dividerOne: {\n    width: 1,\n    background: \"grey\",\n  },\n  dividerTwo: {\n    height: 1,\n    background: \"grey\",\n  },\n})\nconst theme = createTheme({\n  // palette: {\n  //   primary: grey,\n  // },\n  palette: {\n    primary: {\n      main: grey[300],\n    }\n  },\n});\n\nexport default function LeaderBoard() {\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.center}>\n      <Box className={`${classes.root}`}>\n        <Paper className={`${classes.outerPaper}`} outlined elevation={12}>\n          <TryIcon/>\n          <div className={`${classes.content}`}>\n            <div>Left</div>\n            <div className={`${classes.middle}`}>\n              <Divider orientation=\"vertical\" className={`${classes.dividerOne}`}/>\n              <div className={`${classes.innerContent}`}>\n                <div>Top</div>\n                <Divider orientation=\"horizontal\" className={`${classes.dividerTwo}`}/> \n                <div>Bottom</div>\n              </div>\n              <Divider orientation=\"vertical\" className={`${classes.dividerOne}`}/> \n            </div>\n            <Paper className={`${classes.innerPaper}`} elevation={6}>\n              <ThemeProvider theme={theme}>\n                <AppBar className={`${classes.appBar}`} position=\"static\">\n                  <Typography variant=\"h6\">\n                    Score\n                  </Typography>\n                </AppBar>\n              </ThemeProvider>\n              <div>Score Number</div>\n            </Paper>\n          </div>\n        </Paper>\n      </Box>\n    </div>\n  );\n}\n","/home/muhammad/Desktop/WYRA/src/Components/New_Question.js",["105","106"],"/home/muhammad/Desktop/WYRA/src/Components/DashBoard.js",["107"],"/home/muhammad/Desktop/WYRA/src/Components/Question.js",["108","109","110","111","112","113"],"import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/styles';\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\nimport {AppBar, Button, Toolbar, Typography} from '@material-ui/core';\nimport { grey, } from '@material-ui/core/colors';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  color: {\n    background: grey[300],\n  },\n  avatar: {\n    width: \"6em !important\",\n    height: \"6em !important\",\n  },\n  headerOne: {\n    textAlign: \"center\",\n    fontWeight: \"700 !important\",\n    fontSize: \"0.8em !important\",\n    width: \"100%\",\n    height: \"2em\",\n  },\n  headerTwo: {\n    textAlign: \"center\",\n    fontSize: \"1em !important\",\n    height: \"1.6em\",\n  },\n  outerBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: \"1em 0em 1em 0em\",\n    border: \"1px solid lightgray\",\n    borderRadius: \"5px\"\n  },\n  innerBoxOne: {\n    width: \"35%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    borderRight: \"0.5px solid lightgray\",\n  },\n  dividerOne: {\n    color: \"black !important\",\n    backgroundColor:\"black !important\",\n    width: \"0.5em !important\"\n  },\n  innerBoxTwo: {\n    width: \"65%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  optionBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  button: {\n    textTransform: \"none !important\",\n    height: \"2em\",\n    width: \"90%\",\n  },\n  optionTexts: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"50%\",\n    justifyContent: \"flex-start\",\n    margin: \"0.5em 0em 0.5em 0em !important\",\n  },\n  text: {\n    margin: \"0.1em 0em 0.1em 0em !important\",\n    fontWeight: \"700 !important\"\n  },\n}))\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: grey[200],\n    }\n  },\n\t// myColor: {\n\t// \tmain: colors.grey[500]\n\t// },\n});\n\nfunction Question(props) {\n\n  const classes = useStyles();\n\n  const {ids, question, author, isAnswered} = props;\n\n  return(\n      <Box className={classes.outerBox}>\n        <Box className={classes.innerBoxOne}>\n          <Typography className={`${classes.color} ${classes.headerOne}`}>{author.name} asks:</Typography>\n            <Avatar className={`${classes.avatar}`} src={author.avatarURL} alt={author.name}/>\n        </Box>\n        <Box className={`${classes.innerBoxTwo} ${classes.border}`}>\n          <Typography className={`${classes.color} ${classes.headerTwo}`}>Would You Rather</Typography>\n          <Box className={classes.optionBox}>\n            <Box className={classes.optionTexts}>\n              <Typography className={classes.text}>{question.optionOne.text}</Typography>\n              <Typography>or</Typography>\n              <Typography className={classes.text}>{question.optionTwo.text}</Typography>\n            </Box>\n            <Button className={`${classes.button}`} component={Link} to={`/questions/${question.id}`} color=\"primary\" variant=\"contained\">\n              {isAnswered\n              ?\"Check Results\"\n              :\"Answer Here\"\n              }\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n  )\n}\n\n\nfunction mapStateToProps({ questions, users, authedUser}, props) {\n  const { ids } = props;\n\n  const answeredIds = users[authedUser].answers;\n\n\treturn {\n\t\tquestion: questions[ids], \n    author: users[questions[ids].author],\n    answeredIds \n\t};\n}\n\nexport default connect(mapStateToProps)(Question);\n","/home/muhammad/Desktop/WYRA/src/Components/AnswerPage.js",["114","115","116"],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":5,"column":8,"nodeType":"123","messageId":"124","endLine":5,"endColumn":13},{"ruleId":"121","severity":1,"message":"125","line":16,"column":8,"nodeType":"123","messageId":"124","endLine":16,"endColumn":17},{"ruleId":"121","severity":1,"message":"126","line":17,"column":8,"nodeType":"123","messageId":"124","endLine":17,"endColumn":18},{"ruleId":"121","severity":1,"message":"127","line":18,"column":8,"nodeType":"123","messageId":"124","endLine":18,"endColumn":19},{"ruleId":"121","severity":1,"message":"128","line":19,"column":8,"nodeType":"123","messageId":"124","endLine":19,"endColumn":19},{"ruleId":"121","severity":1,"message":"129","line":20,"column":9,"nodeType":"123","messageId":"124","endLine":20,"endColumn":14},{"ruleId":"121","severity":1,"message":"130","line":20,"column":16,"nodeType":"123","messageId":"124","endLine":20,"endColumn":22},{"ruleId":"121","severity":1,"message":"131","line":20,"column":42,"nodeType":"123","messageId":"124","endLine":20,"endColumn":48},{"ruleId":"121","severity":1,"message":"132","line":2,"column":23,"nodeType":"123","messageId":"124","endLine":2,"endColumn":35},{"ruleId":"121","severity":1,"message":"133","line":15,"column":10,"nodeType":"123","messageId":"124","endLine":15,"endColumn":14},{"ruleId":"121","severity":1,"message":"134","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"135","line":1,"column":26,"nodeType":"123","messageId":"124","endLine":1,"endColumn":34},{"ruleId":"121","severity":1,"message":"134","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"136","line":65,"column":9,"nodeType":"123","messageId":"124","endLine":65,"endColumn":23},{"ruleId":"121","severity":1,"message":"137","line":9,"column":8,"nodeType":"123","messageId":"124","endLine":9,"endColumn":15},{"ruleId":"121","severity":1,"message":"135","line":1,"column":16,"nodeType":"123","messageId":"124","endLine":1,"endColumn":24},{"ruleId":"121","severity":1,"message":"138","line":5,"column":22,"nodeType":"123","messageId":"124","endLine":5,"endColumn":35},{"ruleId":"121","severity":1,"message":"139","line":6,"column":9,"nodeType":"123","messageId":"124","endLine":6,"endColumn":15},{"ruleId":"121","severity":1,"message":"140","line":6,"column":25,"nodeType":"123","messageId":"124","endLine":6,"endColumn":32},{"ruleId":"121","severity":1,"message":"141","line":80,"column":7,"nodeType":"123","messageId":"124","endLine":80,"endColumn":12},{"ruleId":"121","severity":1,"message":"142","line":95,"column":10,"nodeType":"123","messageId":"124","endLine":95,"endColumn":13},{"ruleId":"121","severity":1,"message":"143","line":7,"column":8,"nodeType":"123","messageId":"124","endLine":7,"endColumn":17},{"ruleId":"121","severity":1,"message":"139","line":11,"column":10,"nodeType":"123","messageId":"124","endLine":11,"endColumn":16},{"ruleId":"121","severity":1,"message":"140","line":11,"column":25,"nodeType":"123","messageId":"124","endLine":11,"endColumn":32},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'AnswerPage' is defined but never used.","'LeaderBoard' is defined but never used.","'NewQuestion' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Router' is defined but never used.","'adaptV4Theme' is defined but never used.","'Link' is defined but never used.","'Fragment' is defined but never used.","'useState' is defined but never used.","'handleClicking' is assigned a value but never used.","'Divider' is defined but never used.","'ThemeProvider' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'theme' is assigned a value but never used.","'ids' is assigned a value but never used.","'FormLabel' is defined but never used.","no-global-assign","no-unsafe-negation"]