[{"/home/muhammad/Desktop/WYRA/src/index.js":"1","/home/muhammad/Desktop/WYRA/src/Components/App.js":"2","/home/muhammad/Desktop/WYRA/src/middleware/index.js":"3","/home/muhammad/Desktop/WYRA/src/reducers/index.js":"4","/home/muhammad/Desktop/WYRA/src/Components/Navbar.js":"5","/home/muhammad/Desktop/WYRA/src/Components/Login.js":"6","/home/muhammad/Desktop/WYRA/src/actions/index.js":"7","/home/muhammad/Desktop/WYRA/src/middleware/logger.js":"8","/home/muhammad/Desktop/WYRA/src/reducers/authedUser.js":"9","/home/muhammad/Desktop/WYRA/src/reducers/users.js":"10","/home/muhammad/Desktop/WYRA/src/reducers/questions.js":"11","/home/muhammad/Desktop/WYRA/src/actions/authedUser.js":"12","/home/muhammad/Desktop/WYRA/src/actions/questions.js":"13","/home/muhammad/Desktop/WYRA/src/actions/users.js":"14","/home/muhammad/Desktop/WYRA/src/utils/api.js":"15","/home/muhammad/Desktop/WYRA/src/utils/_DATA.js":"16","/home/muhammad/Desktop/WYRA/src/Components/DashBoard.js":"17","/home/muhammad/Desktop/WYRA/src/Components/Question.js":"18","/home/muhammad/Desktop/WYRA/src/Components/AnswerPage.js":"19","/home/muhammad/Desktop/WYRA/src/Components/LeaderBoard.js":"20","/home/muhammad/Desktop/WYRA/src/Components/NewQuestion.js":"21","/home/muhammad/Desktop/WYRA/src/Components/NotFound.js":"22"},{"size":422,"mtime":1618280035677,"results":"23","hashOfConfig":"24"},{"size":1777,"mtime":1630199537312,"results":"25","hashOfConfig":"24"},{"size":169,"mtime":1608264272000,"results":"26","hashOfConfig":"24"},{"size":226,"mtime":1608260078000,"results":"27","hashOfConfig":"24"},{"size":3325,"mtime":1630171811382,"results":"28","hashOfConfig":"24"},{"size":3430,"mtime":1630200752582,"results":"29","hashOfConfig":"24"},{"size":395,"mtime":1630149355916,"results":"30","hashOfConfig":"24"},{"size":301,"mtime":1608264274000,"results":"31","hashOfConfig":"24"},{"size":312,"mtime":1618279568129,"results":"32","hashOfConfig":"24"},{"size":934,"mtime":1630149398812,"results":"33","hashOfConfig":"24"},{"size":830,"mtime":1630149394176,"results":"34","hashOfConfig":"24"},{"size":306,"mtime":1618279648593,"results":"35","hashOfConfig":"24"},{"size":1286,"mtime":1630149347060,"results":"36","hashOfConfig":"24"},{"size":158,"mtime":1630147943372,"results":"37","hashOfConfig":"24"},{"size":484,"mtime":1608441020000,"results":"38","hashOfConfig":"24"},{"size":4691,"mtime":1630171411054,"results":"39","hashOfConfig":"24"},{"size":4130,"mtime":1630171940694,"results":"40","hashOfConfig":"24"},{"size":3558,"mtime":1630171690423,"results":"41","hashOfConfig":"24"},{"size":7673,"mtime":1630198256368,"results":"42","hashOfConfig":"24"},{"size":4258,"mtime":1630171811382,"results":"43","hashOfConfig":"24"},{"size":3958,"mtime":1630174284669,"results":"44","hashOfConfig":"24"},{"size":711,"mtime":1630200325354,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"o8cgqy",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"48"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/muhammad/Desktop/WYRA/src/index.js",[],["95","96"],"/home/muhammad/Desktop/WYRA/src/Components/App.js",[],"/home/muhammad/Desktop/WYRA/src/middleware/index.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/index.js",[],"/home/muhammad/Desktop/WYRA/src/Components/Navbar.js",["97","98","99","100","101","102","103","104"],"import React, {Fragment, useState} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Button } from '@material-ui/core';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { colors } from '@material-ui/core';\r\nimport { resetAuthedUser } from '../actions/authedUser';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst theme = createTheme({\r\n  palette: {\r\n    primary: {\r\n      main: colors.green.A700\r\n    },\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    flexGrow: 1,\r\n    margin: theme.spacing(3)\r\n  },\r\n  outerDiv: {\r\n    fontWeight: 'bolder',\r\n    display: \"flex\",\r\n    flexFlow: \"row\",\r\n    justifyContent: \"space-between\",\r\n    borderBottom: '2px solid black',\r\n    paddingBottom: \"0px\",\r\n  },\r\n  innerDiv:{\r\n    display: \"flex\",\r\n    flexFlow: \"row\",\r\n    alignItems: \"center\",\r\n    marginRight: theme.spacing(3)\r\n  },\r\n  tabSpacing: {\r\n    marginLeft: theme.spacing(15),\r\n    marginBottom: \"0px\",\r\n  },\r\n  spacing: {\r\n    margin: theme.spacing(0.5),\r\n  },\r\n  capitals: {\r\n    textTransform: \"none\",\r\n  }\r\n});\r\n\r\n\r\nfunction Navbar(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = useState(0);\r\n\r\n  const {users, dispatch} = props;\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  const handleLogout = () => {\r\n\t\tdispatch(resetAuthedUser());\r\n  };\r\n\r\nreturn (\r\n  <Fragment>\r\n    <div className={`${classes.root} ${classes.outerDiv}`}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"secondary\"\r\n          textColor=\"primary\"\r\n          variant=\"standard\"\r\n          className={classes.tabSpacing}\r\n        >\r\n          <Tab label=\"Home\" component={Link} to=\"/\" className={classes.capitals}/>\r\n          <Tab label=\"New Poll\" component={Link} to=\"/new_question\" className={classes.capitals}/>\r\n          <Tab label=\"Leader Board\" component={Link} to=\"/leaderboard\" className={classes.capitals}/>\r\n        </Tabs>\r\n      <div className={classes.innerDiv}>\r\n        <ThemeProvider theme={theme} >\r\n          <Typography className={classes.spacing}>{`Hi ${users.name}`}</Typography>\r\n          <Badge\r\n            overlap=\"circular\"\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n              }}\r\n            color=\"primary\"\r\n            variant=\"dot\"\r\n            className={classes.spacing}>\r\n          <Avatar src={users.avatarURL} alt={users.name}/>\r\n          </Badge>\r\n        </ThemeProvider>\r\n        <Button \r\n          variant=\"contained\" \r\n          onClick={handleLogout} \r\n          size=\"medium\" \r\n          endIcon={<ExitToAppIcon/>}\r\n          className={`${classes.spacing} ${classes.capitals}`}\r\n        >\r\n          Sign out\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  </Fragment>\r\n  );\r\n}\r\nfunction mapStateToProps({users, authedUser}) {\r\n  return {\r\n    users: users[authedUser]\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(Navbar);","/home/muhammad/Desktop/WYRA/src/Components/Login.js",["105","106"],"/home/muhammad/Desktop/WYRA/src/actions/index.js",[],"/home/muhammad/Desktop/WYRA/src/middleware/logger.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/authedUser.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/users.js",[],"/home/muhammad/Desktop/WYRA/src/reducers/questions.js",[],"/home/muhammad/Desktop/WYRA/src/actions/authedUser.js",[],"/home/muhammad/Desktop/WYRA/src/actions/questions.js",[],"/home/muhammad/Desktop/WYRA/src/actions/users.js",[],"/home/muhammad/Desktop/WYRA/src/utils/api.js",[],"/home/muhammad/Desktop/WYRA/src/utils/_DATA.js",[],"/home/muhammad/Desktop/WYRA/src/Components/DashBoard.js",[],"/home/muhammad/Desktop/WYRA/src/Components/Question.js",["107","108","109","110","111","112"],"import React, {useState} from 'react';\nimport {connect} from \"react-redux\";\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/styles';\nimport {createTheme, ThemeProvider} from '@material-ui/core/styles';\nimport {AppBar, Button, Toolbar, Typography} from '@material-ui/core';\nimport { grey, } from '@material-ui/core/colors';\nimport Avatar from '@material-ui/core/Avatar';\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  color: {\n    background: grey[300],\n  },\n  avatar: {\n    width: \"6em !important\",\n    height: \"6em !important\",\n  },\n  headerOne: {\n    textAlign: \"center\",\n    fontWeight: \"700 !important\",\n    fontSize: \"0.8em !important\",\n    width: \"100%\",\n    height: \"2em\",\n  },\n  headerTwo: {\n    textAlign: \"center\",\n    fontSize: \"1em !important\",\n    height: \"1.6em\",\n  },\n  outerBox: {\n    display: \"flex\",\n    flexDirection: \"row\",\n    margin: \"1em 0em 1em 0em\",\n    border: \"1px solid lightgray\",\n    borderRadius: \"5px\"\n  },\n  innerBoxOne: {\n    width: \"35%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    borderRight: \"0.5px solid lightgray\",\n  },\n  dividerOne: {\n    color: \"black !important\",\n    backgroundColor:\"black !important\",\n    width: \"0.5em !important\"\n  },\n  innerBoxTwo: {\n    width: \"65%\",\n    display: \"flex\",\n    flexDirection: \"column\"\n  },\n  optionBox: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  button: {\n    textTransform: \"none !important\",\n    height: \"2em\",\n    width: \"90%\",\n  },\n  optionTexts: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    minWidth: \"50%\",\n    justifyContent: \"flex-start\",\n    margin: \"0.5em 0em 0.5em 0em !important\",\n  },\n  text: {\n    margin: \"0.1em 0em 0.1em 0em !important\",\n    fontWeight: \"700 !important\"\n  },\n}))\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: grey[200],\n    }\n  },\n\t// myColor: {\n\t// \tmain: colors.grey[500]\n\t// },\n});\n\nfunction Question(props) {\n\n  const classes = useStyles();\n\n  const {ids, question, author, isAnswered} = props;\n\n  return(\n      <Box className={classes.outerBox}>\n        <Box className={classes.innerBoxOne}>\n          <Typography className={`${classes.color} ${classes.headerOne}`}>{author.name} asks:</Typography>\n            <Avatar className={`${classes.avatar}`} src={author.avatarURL} alt={author.name}/>\n        </Box>\n        <Box className={`${classes.innerBoxTwo} ${classes.border}`}>\n          <Typography className={`${classes.color} ${classes.headerTwo}`}>Would You Rather</Typography>\n          <Box className={classes.optionBox}>\n            <Box className={classes.optionTexts}>\n              <Typography className={classes.text}>{question.optionOne.text}</Typography>\n              <Typography>or</Typography>\n              <Typography className={classes.text}>{question.optionTwo.text}</Typography>\n            </Box>\n            <Button className={`${classes.button}`} component={Link} to={`/questions/${question.id}`} color=\"primary\" variant=\"contained\">\n              {isAnswered\n              ?\"Check Results\"\n              :\"Answer Here\"\n              }\n            </Button>\n          </Box>\n        </Box>\n      </Box>\n  )\n}\n\n\nfunction mapStateToProps({ questions, users, authedUser}, props) {\n  const { ids } = props;\n\n  const answeredIds = users[authedUser].answers;\n\n\treturn {\n\t\tquestion: questions[ids], \n    author: users[questions[ids].author],\n    answeredIds \n\t};\n}\n\nexport default connect(mapStateToProps)(Question);\n","/home/muhammad/Desktop/WYRA/src/Components/AnswerPage.js",[],"/home/muhammad/Desktop/WYRA/src/Components/LeaderBoard.js",["113","114","115","116","117"],"import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Paper from '@material-ui/core/Paper';\nimport Divider from '@material-ui/core/Divider';\nimport {createTheme} from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport TryIcon from '@material-ui/icons/Try';\nimport Avatar from '@material-ui/core/Avatar';\nimport {Typography} from '@material-ui/core';\nimport { grey, } from '@material-ui/core/colors';\nimport { connect } from 'react-redux';\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    '& > :not(style)': {\n      m: 10,\n      height: 200,\n    },\n    flexDirection: \"column\"\n  },\n  center: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: \"center\",\n  },\n  userName: {\n    display: 'flex',\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"30%\",\n    justifyContent: \"space-between\",\n  },\n  outerPaper: {\n    display: 'flex',\n    flexDirection: \"column\",\n    margin: \"2em\",\n    border: \"1px solid gray\"\n  },\n  content: {\n    display: 'flex',\n    flexDirection: \"row\",\n    margin: \"0em\",\n  },\n  middle: {\n    display: 'flex',\n    flexDirection: \"row\",\n    width: \"40%\"\n  },\n  innerContent: {\n    width: 300,\n    display: 'flex',\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  innerPaper: {\n    display: 'flex',\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    width: \"30%\"\n  },\n  appBar: {\n    borderBottom: \"2px solid gray\",\n    marginBottom: \"1em\"\n  },\n  dividerOne: {\n    width: 1,\n    background: \"grey\",\n  },\n  dividerTwo: {\n    height: 1,\n    background: \"grey\",\n    margin: \"1em 0em !important\",\n    width: \"100%\"\n  },\n})\nconst theme = createTheme({\n  // palette: {\n  //   primary: grey,\n  // },\n  palette: {\n    primary: {\n      main: grey[300],\n    }\n  },\n});\n\nfunction LeaderBoard(props) {\n\n  const classes = useStyles();\n  const {users, ids} = props;\n\n  return (\n    <div className={classes.center}>\n      <Box className={`${classes.root}`}>\n        {ids.map((id) => \n        (<Paper className={`${classes.outerPaper}`} key={id} outlined >\n          <TryIcon/>\n          <div className={`${classes.content}`}>\n            <Box className={classes.userName}>\n              <Typography variant=\"h5\">Users</Typography>\n              <Divider orientation=\"horizontal\" className={`${classes.dividerTwo}`}/>\n              <Typography variant=\"h6\">{users[id].name}</Typography>\n              <Divider orientation=\"horizontal\" className={`${classes.dividerTwo}`}/>\n              <Avatar className={`${classes.avatar}`} src={users[id].avatarURL} alt={users[id].name}/>\n            </Box>\n            <div className={`${classes.middle}`}>\n              <Divider orientation=\"vertical\" className={`${classes.dividerOne}`}/>\n              <Box className={`${classes.innerContent}`}>\n              <Typography variant=\"h5\">Questions</Typography>\n              <Divider orientation=\"horizontal\" className={`${classes.dividerTwo}`}/>\n                <Typography variant=\"h6\">{`Answered: ${Object.keys(users[id].answers).length}`}</Typography>\n                <Divider orientation=\"horizontal\" className={`${classes.dividerTwo}`}/> \n                <Typography variant=\"h6\">{`Asked: ${users[id].questions.length}`}</Typography>\n              </Box>\n              <Divider orientation=\"vertical\" className={`${classes.dividerOne}`}/> \n            </div>\n            <Box className={classes.innerPaper}>\n              <Typography sx={{textAlign: \"center\"}} variant=\"h5\">\n                Points\n              </Typography>\n              <Divider orientation=\"horizontal\" className={`${classes.dividerTwo}`}/>\n              <Typography variant=\"h6\" style={{textAlign: \"center\"}}>\n                {users[id].questions.length + Object.keys(users[id].answers).length}\n              </Typography>\n            </Box>\n          </div>\n        </Paper>\n        ))}\n      </Box>\n    </div>\n  );\n}\n\n\nfunction mapStateToProps({users}) {\n  return {\n    ids: Object.keys(users).sort((a, b) => \n      (Object.keys(users[b].answers).length + users[b].questions.length) \n      -(Object.keys(users[a].answers).length + users[a].questions.length)\n    ),\n    users,\n  }\n}\n\nexport default connect(mapStateToProps)(LeaderBoard);\n","/home/muhammad/Desktop/WYRA/src/Components/NewQuestion.js",["118","119"],"import React, {useState} from 'react';\nimport {createTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { makeStyles } from '@material-ui/styles';\nimport Button from '@material-ui/core/Button';\nimport { green } from '@material-ui/core/colors';\nimport {AppBar, Paper, Typography} from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport Box from '@material-ui/core/Box';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { handleSaveQuestion } from '../actions/questions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexFlow: \"column\",\n    width: \"30em\",\n  },\n  center: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: \"center\",\n  },\n  appBar: {\n    padding: \"0.5em\",\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  spacing: {\n    margin: \"0.5em 1em 1em 1em\", \n  },\n  font: {\n    fontWeight: 700,\n  },\n  button: {\n    margin: \"2em 0em\",\n  },\n  background: {\n    backgroundColor: \"black\",\n    // margin: theme.spacing(1),\n    margin: \"2em\",\n  },\n  subtitle: {\n    display: \"flex\", \n    flexDirection: \"column\", \n  },\n}));\n\nconst theme = createTheme({\n  palette: {\n    primary: green,\n  },\n});\n\nfunction NewQuestion({dispatch}) {\n  \n  const classes = useStyles();\n  const [firstOption, setFirstOption] = useState(\"\");\n  const [secondOption, setSecondOption] = useState(\"\");\n  const [home, setHome] = useState(false);\n  \n  const handleFirstChange = (e) => {\n    setFirstOption(e.target.value)\n  };\n  const handleSecondChange = (e) => {\n    setSecondOption(e.target.value)\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(handleSaveQuestion(firstOption, secondOption));\n    debugger\n    setHome(true);\n  };\n\n\n  if (home === true) {\n    return <Redirect to=\"/\"/>\n  }return (\n    <div className={classes.center}>\n      <Paper elevation={12}>\n        <ThemeProvider theme={theme}>\n          <form  autoComplete=\"off\" onSubmit={handleSubmit} className={`${classes.root}`}>\n            <AppBar className={`${classes.appBar}`} position=\"static\">\n              <Typography variant=\"h5\">\n                Play the Would You Rather Game.\n              </Typography>\n            </AppBar>\n            <Box className={`${classes.spacing}`}>\n              <div className={`${classes.spacing} ${classes.subtitle}`}>\n                <Typography variant=\"h7\" gutterBottom\t>\n                  Enter your question:\n                </Typography>\n                <Typography variant=\"h7\" sx={{ marginTop: \"0.5em\" }} className={`${classes.font}`}>\n                  Would you rather:\n                </Typography>\n              </div>\n              <div className={`${classes.spacing}`}>\n                <TextField \n                  value={firstOption}\n                  onChange={handleFirstChange} \n                  label=\"Enter a first option\" \n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </div>\n              <div className={`${classes.spacing}`}>\n                <Divider>\n                  <Chip label=\"OR\" variant=\"h1\"/>\n                </Divider>\n              </div>\n              <div className={`${classes.spacing}`}>\n                <TextField \n                  value={secondOption}\n                  onChange={handleSecondChange} \n                  label=\"Enter a second option\" \n                  variant=\"outlined\"\n                  fullWidth\n                />\n              </div>\n              <div className={`${classes.spacing}`}>\n                <Button size=\"large\" fullWidth className={`${classes.button}`} color=\"primary\" type=\"submit\" variant=\"contained\">\n                  Submit\n                </Button>\n              </div>\n            </Box>\n          </form>\n        </ThemeProvider>\n      </Paper>\n    </div>\n  );\n}\n\nexport default connect()(NewQuestion);","/home/muhammad/Desktop/WYRA/src/Components/NotFound.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":13},{"ruleId":"124","severity":1,"message":"128","line":16,"column":8,"nodeType":"126","messageId":"127","endLine":16,"endColumn":17},{"ruleId":"124","severity":1,"message":"129","line":17,"column":8,"nodeType":"126","messageId":"127","endLine":17,"endColumn":18},{"ruleId":"124","severity":1,"message":"130","line":18,"column":8,"nodeType":"126","messageId":"127","endLine":18,"endColumn":19},{"ruleId":"124","severity":1,"message":"131","line":19,"column":8,"nodeType":"126","messageId":"127","endLine":19,"endColumn":19},{"ruleId":"124","severity":1,"message":"132","line":20,"column":9,"nodeType":"126","messageId":"127","endLine":20,"endColumn":14},{"ruleId":"124","severity":1,"message":"133","line":20,"column":16,"nodeType":"126","messageId":"127","endLine":20,"endColumn":22},{"ruleId":"124","severity":1,"message":"134","line":20,"column":42,"nodeType":"126","messageId":"127","endLine":20,"endColumn":48},{"ruleId":"124","severity":1,"message":"135","line":2,"column":23,"nodeType":"126","messageId":"127","endLine":2,"endColumn":36},{"ruleId":"124","severity":1,"message":"136","line":15,"column":7,"nodeType":"126","messageId":"127","endLine":15,"endColumn":12},{"ruleId":"124","severity":1,"message":"137","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":24},{"ruleId":"124","severity":1,"message":"135","line":5,"column":22,"nodeType":"126","messageId":"127","endLine":5,"endColumn":35},{"ruleId":"124","severity":1,"message":"138","line":6,"column":9,"nodeType":"126","messageId":"127","endLine":6,"endColumn":15},{"ruleId":"124","severity":1,"message":"139","line":6,"column":25,"nodeType":"126","messageId":"127","endLine":6,"endColumn":32},{"ruleId":"124","severity":1,"message":"136","line":80,"column":7,"nodeType":"126","messageId":"127","endLine":80,"endColumn":12},{"ruleId":"124","severity":1,"message":"140","line":95,"column":10,"nodeType":"126","messageId":"127","endLine":95,"endColumn":13},{"ruleId":"124","severity":1,"message":"141","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":24},{"ruleId":"124","severity":1,"message":"137","line":1,"column":26,"nodeType":"126","messageId":"127","endLine":1,"endColumn":34},{"ruleId":"124","severity":1,"message":"135","line":5,"column":22,"nodeType":"126","messageId":"127","endLine":5,"endColumn":35},{"ruleId":"124","severity":1,"message":"138","line":9,"column":9,"nodeType":"126","messageId":"127","endLine":9,"endColumn":15},{"ruleId":"124","severity":1,"message":"136","line":79,"column":7,"nodeType":"126","messageId":"127","endLine":79,"endColumn":12},{"ruleId":"124","severity":1,"message":"142","line":60,"column":10,"nodeType":"126","messageId":"127","endLine":60,"endColumn":18},{"ruleId":"124","severity":1,"message":"143","line":60,"column":20,"nodeType":"126","messageId":"127","endLine":60,"endColumn":31},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'Dashboard' is defined but never used.","'AnswerPage' is defined but never used.","'LeaderBoard' is defined but never used.","'NewQuestion' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'Router' is defined but never used.","'ThemeProvider' is defined but never used.","'theme' is assigned a value but never used.","'useState' is defined but never used.","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'ids' is assigned a value but never used.","'Fragment' is defined but never used.","'isActive' is assigned a value but never used.","'setIsActive' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]